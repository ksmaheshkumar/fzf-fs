#!/usr/bin/env bash

# fzf-fs-bash
# part of fzf-fs
# Copyright (C) 2015 D630, The MIT License (MIT)
# <https://github.com/D630/fzf-fs>

# -- DEBUGGING.

#printf '%s (%s)\n' "$BASH_VERSION" "${BASH_VERSINFO[5]}" && exit 0
#set -o errexit
#set -o errtrace
#set -o noexec
#set -o nounset
#set -o pipefail
#set -o verbose
#set -o xtrace
#trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG
#exec 2>> ~/fzf-fs.log
#typeset vars_base=$(set -o posix ; set)
#fgrep -v -e "$vars_base" < <(set -o posix ; set) | \
#egrep -v -e "^BASH_REMATCH=" \
#         -e "^OPTIND=" \
#         -e "^REPLY=" \
#         -e "^BASH_LINENO=" \
#         -e "^BASH_SOURCE=" \
#         -e "^FUNCNAME=" | \
#less

# -- FUNCTIONS.

__fzffs_prepare_bash ()
{
    builtin unset -v \
        FZF_FS_BASH_OPTS_OLD \
        FZF_FS_GLOBINORE_OLD \
        REPLY;

    builtin typeset -g FZF_FS_GLOBINORE_OLD=
    if [[ ${GLOBIGNORE+x} == x ]]
    then
        FZF_FS_GLOBINORE_OLD="$GLOBIGNORE"
    else
        FZF_FS_GLOBINORE_OLD=FZF_FS_GLOBINORE_OLD
    fi
    builtin unset -v GLOBIGNORE

    builtin typeset -ga FZF_FS_BASH_OPTS_OLD="()";
    builtin typeset REPLY=;
    while builtin read -r; do
        FZF_FS_BASH_OPTS_OLD+=("$REPLY");
    done < <(builtin shopt -p);
    builtin shopt -u dotglob;
    builtin shopt -s nullglob;

    function __fzffs_clean_sh ()
    {
        [[ "$FZF_FS_GLOBINORE_OLD" == FZF_FS_GLOBINORE_OLD ]] || \
            builtin typeset -x GLOBIGNORE="$FZF_FS_GLOBINORE_OLD";

        builtin unset -v o;
        builtin typeset o=;
        for o in "${FZF_FS_BASH_OPTS_OLD[@]}";
        do
            builtin $o;
        done
    };

    function __fzffs_util_echo ()
    {
        IFS=" " builtin printf '%b\n' "$*"
    };

    function __fzffs_util_echoE ()
    {
        IFS=" " builtin printf '%s\n' "$*"
    };

    function __fzffs_util_echon ()
    {
        IFS=" " builtin printf '%s' "$*"
    }
}

# -- MAIN.

__fzffs_prepare_bash
